<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Fri, 06 Sep 2024 05:37:33 GMT</lastBuildDate>
    <item>
      <title>[媒体] 在最近的一份声明中，Mr.</title>
      <link>https://t.me/hn_summary/107200</link>
      <description><![CDATA[特朗普：我将聘请埃隆·马斯克作为美国效率沙皇进行“大刀阔斧”的改革
在最近的一份声明中，特朗普透露计划任命埃隆·马斯克为新效率委员会的负责人，该委员会旨在在六个月内消除“欺诈和不当付款”。这是首次公开认可这一想法，并确认马斯克将参与其中。尽管存在政府问责局 (GAO)，但特朗普认为，马斯克强硬的领导风格（从他在 Twitter（现为 X）大幅裁员可以看出）使他成为这一职位的理想人选。该提议是向商界领袖广泛宣传的一部分，其中包括承诺减税和监管。然而，该计划遭到了工会组织的批评，美国政府雇员联合会的埃弗里特·凯利指责特朗普和马斯克试图破坏无党派的公务员制度。]]></description>
      <guid>https://t.me/hn_summary/107200</guid>
      <pubDate>Fri, 06 Sep 2024 05:37:33 GMT</pubDate>
    </item>
    <item>
      <title>当您将 Pickle 触碰到 AM 无线电塔时会发生什么？</title>
      <link>https://t.me/hn_summary/107199</link>
      <description><![CDATA[将泡菜接触到 AM 无线电塔会发生什么？
几个月前，我问我爸爸，如果将热狗接地到他的 AM 无线电塔之一，会发生什么，我们的 AM 无线电热狗实验因此在网上迅速走红。我们进行了测试，结果非常棒。很快，来自 Plasma Channel 的 Jay 加入了我们在密苏里州圣查尔斯进行的第二轮实验，我们测量了从 SWR 到肉类热量等所有数据。

安全注意事项：请勿尝试。我们咨询了经验丰富的广播天线设计师，并遵循保守的 FCC 安全暴露指南。

实验：
1. 热狗：产生噪音并加热至 80°C。发射器功率短暂上升至 14 kW。
2. 泡菜：导体良好，导致发射器暂时禁用 RF 输出。Jay 尝了尝，然后吐了出来，说味道像铜。
3. 德式香肠：将信号翻译成德语短语。产生更多烟雾，但声音没有明显差异。
4. 素食热狗：声音更大，温度更低，白色物质渗出。Jay 觉得“相当不错”。
5. 玉米热狗：烟雾和火焰量惊人。令人愉悦的烧焦味，发射器保持在 12 kW。
6. 早餐香肠：声音更大，烧焦均匀。 6 kW 输出时稳定。
7. 热狗加热器：距离塔 1 英寸处无明显加热。

结论：未来的测试可以从声压级计和高速摄像机中受益，以捕捉等离子体相互作用。]]></description>
      <guid>https://t.me/hn_summary/107199</guid>
      <pubDate>Fri, 06 Sep 2024 05:12:22 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 懒惰的程序员常常喜欢用计算工作来代替编程工作。</title>
      <link>https://t.me/hn_summary/107198</link>
      <description><![CDATA[我使用 Nim 而不是 Python 进行数据处理
懒惰的程序员通常喜欢用计算工作来代替编程工作。我就是这样的程序员。在我的研究中，我经常需要设计和运行针对 TB 级大型数据集的算法。作为 NIH 的研究员，我可以使用 Biowulf，这是一个拥有 100,000 多个处理器的集群，因此当我可以执行大型 MapReduce 时，通常不值得花费大量时间来优化单个实验的单线程性能。尽管可以访问这些资源，但我越来越多地使用 Nim 编程语言进行数据处理任务。Nim 在计算科学中被低估，但它是非数值数据处理非常有效的 Python 替代品。从高层次上讲，Nim 和 Python 一样易于编写，并且和 C 一样快。它属于新一代语言，具有编译语言的性能和动态语言的表现力。如果您了解 Python，那么您对 ​​Nim 的了解就达到了 90%，并且可以享受所有好处。考虑以下简单问题：您有一堆 DNA 序列（由四个字母 A、T、G 和 C 组成的字符串），存储在带有 &gt; 分隔注释行的文本文件中（即 FASTA 格式）。标准任务是计算序列中 G 和 C 的百分比，该指标称为 GC 含量。在 Python 中，一个简单的实现如下所示： gc = 0 total = 0 for line in open(&quot;orthocoronavirinae.fasta&quot;): if line0 == &#39;&gt;&#39;: # ignore comment lines continue for letter in line.rstrip(): if letter == &#39;C&#39; or letter == &#39;G&#39;: gc += 1 total += 1 print(gc / total) 在我的笔记本电脑上，此代码在 150 MB 冠状病毒基因组数据集上运行需要 23.43 秒。作为替代方案，我可以使用 Nim，基本上免费获得巨大的速度提升。实际上，Nim 的实现大致相同：var gc = 0var total = 0for line in lines(&quot;orthocoronavirinae.fasta&quot;):if line0 ==&#39;&gt;&#39;:# ignore comment lines continuefor letter in line:if letter ==&#39;C&#39; or letter ==&#39;G&#39;:gc += 1total += 1 echo(gc / total)这些变化虽然在代码方面很小，但在性能方面却相当大：相对于 Nim 的程序时间Python 3.9 23.43 秒30.6xPyPy 7.3 2.54 秒3.3xNim 1.4（带有-d：danger --gc：orc 标志）0.765 秒1.0x为了比较完全公平，Nim 编译过程额外花费了 702 毫秒，这意味着完成一个完整的优化编译和运行周期比使用 PyPy 仍然更快。 Nim 使这变得简单，因为有一个 r 命令可以在编译后自动运行您的程序。尽管 Nim 是一种编译语言，但编译过程足够快，可以代替解释语言。尽管几乎相同，但 Nim 代码和 Python 代码之间还是存在一些差异：使用 var 声明变量。Nim 允许使用 let 定义运行时常量，并在编译时检查是否有任何变异的可能性。它还支持使用 const 的编译时常量。使用 lines 函数而不是 open 来逐行迭代文件的内容。lines 函数的一个不错的功能是它会自动删除换行符，例如 LF 和 CRLF，因此我们不再需要执行 line.rstrip()。Nim 使用 echo，而不是 print。有一些细微的差别，但 echo 的一个优点是 Python 2.x 时代的 print-as-a-statement 样式表达式又回来了（例如 echo &quot;Hello world!&quot;）。为了说明 Nim 有多么有用，请考虑我在研究中遇到的这个真实示例。我的数据中有很多回文伪影，这扰乱了我对新类病毒的搜索。这些伪影的一个标志是存在长子序列及其反向补体（子序列向后，每个碱基都被相应的对替换）。为了衡量问题的范围，我需要检查数据集中的每个序列，看看它是否是可能的伪影，然后将其删除。让我们首先看看标准的 Python 方式：导入]]></description>
      <guid>https://t.me/hn_summary/107198</guid>
      <pubDate>Fri, 06 Sep 2024 04:46:10 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 我很高兴地宣布我已加入 Polar 担任顾问！</title>
      <link>https://t.me/hn_summary/107197</link>
      <description><![CDATA[Polar – 面向开发人员的开源货币化平台
我很高兴地宣布，我已加入 Polar 担任顾问！Polar 是一个开源货币化平台，旨在为开发人员提供更多选择，让他们能够通过工作获得报酬、支持上游项目，并为用户提供更大的信心和透明度，让他们选择支持或购买软件。该计划旨在为开发人员和用户创建一个更可持续的生态系统。]]></description>
      <guid>https://t.me/hn_summary/107197</guid>
      <pubDate>Fri, 06 Sep 2024 03:58:36 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] “Retronews”项目是一个用于浏览 Hacker News 和 Lobsters 的 Python 脚本 [...]</title>
      <link>https://t.me/hn_summary/107196</link>
      <description><![CDATA[显示 HN：Retronews – HN 和 Lobsters 的 TUI 模拟经典 Usenet 阅读器
“Retronews”项目是一个 Python 脚本，旨在使用怀旧界面浏览 Hacker News 和 Lobsters 讨论，该界面模拟经典 Usenet 和邮件阅读器，如 slrn 和 mutt。其主要目的是突出显示有趣的主题并跟踪已读/未读消息，通过一次显示一条消息来促进更慢、更专注的阅读。它在类 Unix 系统上运行，使用 Python 3.9，在 Windows 上需要 windows-curses。该项目的独特之处在于其简单易用，无需安装。可以通过配置文件进行自定义。与 NNTP 网关不同，Retronews 可以高效处理线程浏览和消息检索，而无需提前获取所有元数据。]]></description>
      <guid>https://t.me/hn_summary/107196</guid>
      <pubDate>Fri, 06 Sep 2024 03:26:23 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] GitHub 项目“通过在主进程中使用 V8 快照来加速 Electron 应用 [...]</title>
      <link>https://t.me/hn_summary/107195</link>
      <description><![CDATA[通过在主进程中使用 V8 快照来加速 Electron 应用
GitHub 项目“通过在主进程中使用 V8 快照来加速 Electron 应用”演示了如何通过利用 V8 快照显著减少 Electron 应用的启动时间。实验表明，使用 V8 快照可以将主进程中 require() 调用所花费的时间减少 80% 以上，从而使启动时间总体提高 36%。该项目涉及创建一个 V8 快照，该快照预编译并执行依赖模块，然后在应用程序启动期间对其进行反序列化。该方法通过专注于优化 Electron 应用的主进程、提供详细的实施指南和性能指标来脱颖而出。（基于 55% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/107195</guid>
      <pubDate>Fri, 06 Sep 2024 03:22:17 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在《你所做的工作，你是一个怎样的人》一书中，作者讲述了她为 [...]</title>
      <link>https://t.me/hn_summary/107194</link>
      <description><![CDATA[你所做的工作，你是一个什么样的人 (2017)
在《你所做的工作，你是一个什么样的人》一书中，作者讲述了她童年时为一位富有的女人工作的经历。她以两美元的价格打扫了这位女人的房子，里面充满了她自己家里没有的奢侈品。尽管身体上很累，要求也不公平，但这份工作让她感到自豪，并为家庭做出了经济贡献。她父亲的建议——强调自我价值而不是工作性质——深刻地塑造了她对劳动和身份的看法。故事强调了过去和现在对儿童角色和责任的看法之间的对比，巧妙地批评了现代的过度保护。]]></description>
      <guid>https://t.me/hn_summary/107194</guid>
      <pubDate>Fri, 06 Sep 2024 03:09:08 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在意大利蒙法尔科内，一群由 Miah Bappy 带领的孟加拉朋友被迫 [...]</title>
      <link>https://t.me/hn_summary/107193</link>
      <description><![CDATA[禁止板球运动的意大利小镇
在意大利蒙法尔科内，一群孟加拉朋友在米亚·巴皮的带领下，被迫在城外打板球，因为市长安娜·玛丽亚·西辛特实施了事实上的禁令。这位来自极右翼联盟党的市长声称，这项禁令是由于安全问题和空间不足，但巴皮认为，禁令的根源在于反移民情绪。蒙法尔科内有大量孟加拉穆斯林人口，随着西辛特寻求“保护”基督教价值观并遏制她所认为的伊斯兰原教旨主义，该地区的紧张局势不断加剧。市长还以城市规划法规为由，限制当地伊斯兰中心的集体祈祷。这场争议凸显了意大利移民与文化保护之间更广泛的冲突。尽管法院的裁决有利于伊斯兰中心，但 Cisint 仍然致力于反伊斯兰化运动，并已当选欧洲议会议员以进一步推进她的议程。]]></description>
      <guid>https://t.me/hn_summary/107193</guid>
      <pubDate>Fri, 06 Sep 2024 03:01:01 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 作为一名首席工程师，我经常开玩笑说我的主要编程语言是英语。</title>
      <link>https://t.me/hn_summary/107192</link>
      <description><![CDATA[编写设计文档的理由
作为首席工程师，我经常开玩笑说我的主要编程语言是英语。这凸显了沟通对我的角色的重要性，它与技术技能一样重要。写作在软件工程的各个层面都是必不可少的，不仅仅是技术主管或首席工程师。我们编写设计文档、代码注释、Jira 描述和 Slack 消息，因为它很有用，即使并不总是令人愉快。编写设计文档有助于澄清和完善想法，通过揭露盲点来改善协作，拓宽组织理解，并保留决策背后的理由。虽然设计文档不能总是捕捉系统的当前状态，但它们提供了一个有价值的起点。最终，我们应该多写一些来加强沟通和决策。 

令人惊讶/巧妙：设计文档与口头传统的类比以及切斯特顿栅栏的故事有效地说明了记录决策和知识的重要性。

有争议：大多数工程师不喜欢写作的说法可能会引起争议，因为它概括了不同群体的偏好。]]></description>
      <guid>https://t.me/hn_summary/107192</guid>
      <pubDate>Fri, 06 Sep 2024 02:20:46 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] SpaceX 成功进行首次激光发射，取得了重要的里程碑[...]</title>
      <link>https://t.me/hn_summary/107191</link>
      <description><![CDATA[SpaceX 卫星首次为美国军方进行激光数据交换
SpaceX 成功为美国太空发展局 (SDA) 进行了两颗配备 Tesat 终端的卫星之间的首次激光数据交换，取得了重要的里程碑。这标志着 SDA 首次在太空中展示军用级光通信。数据交换于 9 月 3 日进行，在不到 100 秒的时间内建立了链接并维持了数小时。该测试是 SDA 的 Tranche 0 低地球轨道实验航天器的一部分，对于旨在增强军事通信和监视的扩散战斗机空间架构 (PWSA) 计划至关重要。此外，所有四颗 SpaceX 卫星都已成功使用红外传感器探测到火箭发射。]]></description>
      <guid>https://t.me/hn_summary/107191</guid>
      <pubDate>Fri, 06 Sep 2024 02:18:41 GMT</pubDate>
    </item>
    </channel>
</rss>