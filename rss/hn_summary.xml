<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>HN 摘要</title>
    <link>https://tg.i-c-a.su</link>
    <description>由大型语言模型编写的热门 Hacker News 故事的自动摘要。</description>
    <lastBuildDate>Sat, 24 Aug 2024 18:08:44 GMT</lastBuildDate>
    <item>
      <title>[媒体] 文章“能力越大，责任越大 平台希望成为公用事业”[...]</title>
      <link>https://t.me/hn_summary/105382</link>
      <description><![CDATA[权力越大，责任越大 平台想成为公用事业（2021 年）
EFF.org 上的文章“权力越大，责任越大 平台想成为公用事业”批评了 Facebook、Google、Amazon 和 Apple 等科技巨头的垄断倾向。这些公司已经成为我们数字生活中不可或缺的一部分，掌握着我们大量的个人数据和媒体。然而，他们不透明且任意的账户终止和内容删除政策可能会给用户带来毁灭性的后果，从丢失家庭照片到被锁定在基本服务之外。文章主张更透明的审核实践，并建议进行“信息受托人”规则等法律改革，以确保公司的行为符合用户的最佳利益。它还主张打破技术垄断，加强互操作性，以恢复竞争和用户对其数据的控制。

争议：文章强调了科技巨头的垄断行为及其对用户权利的不利影响，呼吁进行重大监管变革。

独特/巧妙的见解：将科技公司的账户终止政策比作“卡夫卡式迷宫”，并呼吁制定“信息受托人”规则来保护用户数据，这一点尤其引人注目。（基于 93% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/105382</guid>
      <pubDate>Sat, 24 Aug 2024 18:08:44 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 以“末日时钟”而闻名的《原子科学家公报》（BAS）最近出版了 [...]</title>
      <link>https://t.me/hn_summary/105381</link>
      <description><![CDATA[《原子科学家公报》：核政策需要“酷儿化”
以“末日时钟”闻名的《原子科学家公报》（BAS）最近发表了一篇文章，主张将酷儿观点纳入核政策。文章认为，酷儿代表可以通过带来不同的观点和经验来增强核安全。然而，这篇博文的作者批评了这一立场，质疑酷儿理论与核政策的相关性，并暗示该文章推动了社会议程，而不是解决实质性问题。作者还对所提供的证据提出质疑，认为结构性偏见和酷儿个人对核政策的独特贡献的说法是难以令人信服和没有根据的。争议在于，这本受人尊敬的科学期刊被认为具有意识形态影响力，并声称酷儿观点对于有效的核政策至关重要。（基于 92% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/105381</guid>
      <pubDate>Sat, 24 Aug 2024 18:03:38 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 波音公司埃弗雷特工厂的周一和周三一点也不安静，因为机械师 [...]</title>
      <link>https://t.me/hn_summary/105380</link>
      <description><![CDATA[波音公司罢工风潮四起
波音埃弗雷特工厂的周一和周三一点也不平静，机械师们加紧了他们的合同宣传活动，使用气喇叭、呜呜祖拉和“2024 年下班”的口号。在伦顿，第二班工人在用餐休息时大声播放各种音乐，让管理层心烦意乱。机械师的合同涵盖华盛顿的 31,000 名成员和俄勒冈的 1,300 名成员，将于 9 月 12 日到期。关键问题包括起薪低、用 401(k) 计划取代养老金以及艰苦的强制加班。工人们士气低落，许多人无法负担基本生活费用。波音公司最近的质量问题，包括 737 MAX 坠机事件，都归咎于公司注重利润而忽视质量以及缺乏经验的管理。高流动率加剧了这一问题，许多经验丰富的工人为了更好的机会而离开。工会正在推动工资上涨 40% 并恢复养老金。尽管有人猜测波音公司可能会欢迎短暂罢工以避免因飞机交付延迟而受到处罚，但工人们仍然持怀疑态度，理由是潜在的现金流问题和供应链中断。]]></description>
      <guid>https://t.me/hn_summary/105380</guid>
      <pubDate>Sat, 24 Aug 2024 18:03:35 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 美国国家航空航天局 (NASA) 决定在没有宇航员的情况下将波音公司的 Starliner 宇宙飞船返回地球 [...]</title>
      <link>https://t.me/hn_summary/105379</link>
      <description><![CDATA[NASA 决定在无人驾驶的情况下将 Starliner 飞船带回地球
NASA 决定在无人驾驶的情况下将波音公司的 Starliner 飞船带回地球，优先考虑安全和进一步测试。无人驾驶返回将使 NASA 和波音公司能够收集有关 Starliner 性能的更多数据。一直支持国际空间站各种活动的 Wilmore 和 Williams 将于 2025 年 2 月乘坐 SpaceX Dragon 飞船返回地球。这一决定是在发现氦气泄漏和飞船反应控制推进器存在问题之后做出的。NASA 强调，此举是出于对安全的承诺以及对载人任务更高确定性的需求。星际客机预计将于 9 月初实现受控自主再入。]]></description>
      <guid>https://t.me/hn_summary/105379</guid>
      <pubDate>Sat, 24 Aug 2024 18:01:29 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 上周，我用一个新账户登录了 Twitter，立刻就被一堆 [...]</title>
      <link>https://t.me/hn_summary/105378</link>
      <description><![CDATA[用语义 HTML 替换 Twitter 嵌入
上周，我用一个新帐户登录 Twitter，立即被一连串种族主义和色情内容轰炸。我感到厌恶，决定停止使用 Twitter。但是，我的博客仍然包含许多嵌入的推文。为了避免将读者引导到这样一个有毒的平台，我开发了一种半自动化方法，用语义 HTML 替换这些嵌入。这种方法确保不会泄露数据，因为图像和头像是内联的，并且链接绕过了 Twitter 的 t.co 服务。HTML 干净、易用，包括媒体、表情符号和替代文本。该解决方案的 Python 代码可在 GitHub 上获取，欢迎提供反馈。]]></description>
      <guid>https://t.me/hn_summary/105378</guid>
      <pubDate>Sat, 24 Aug 2024 17:54:25 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] “用 PHP 编写的 Golang 解释器”项目，在 GitHub 上以 Go-PH 的名义托管 [...]</title>
      <link>https://t.me/hn_summary/105377</link>
      <description><![CDATA[用 PHP 编写的 Golang 解释器
“用 PHP 编写的 Golang 解释器”项目托管在 GitHub 上，名称为 Go-PHP，旨在使用 PHP 解释 Go 代码。该项目可用于在 PHP 环境中执行 Go 代码片段，这可能对教育目的或将 Go 代码集成到 PHP 应用程序中很有用。提供的示例演示了如何定义 Go 函数并使用解释器执行它。作者指出，这是一项正在进行的工作 (WIP)，不打算用于生产用途。与官方 Go 编译器的主要区别包括缺乏对真实 goroutines 的支持，而是按顺序运行 go 语句。开发说明包括使用 Composer 安装依赖项并使用 Make 运行测试。]]></description>
      <guid>https://t.me/hn_summary/105377</guid>
      <pubDate>Sat, 24 Aug 2024 17:52:18 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 异步危害：MMAP 正在阻塞 IO</title>
      <link>https://t.me/hn_summary/105376</link>
      <description><![CDATA[异步危险：MMAP 正在阻塞 IO
异步危险：MMAP 正在阻塞 IO

用于读取的内存映射文件似乎很方便，将繁琐的读取调用转换为简单的内存索引。然而，它秘密执行阻塞 IO，将字节数组变成异步危险，并使并发异步代码按顺序运行。这会导致性能下降、资源利用不足和延迟峰值。Rust 中的实验表明，使用 async/await 的内存映射 IO 的行为类似于顺序代码，而传统 IO 受益于并发性。出现此问题的原因是内存映射 IO 在磁盘访问期间阻塞线程，从而阻止异步执行器运行其他任务。这个问题很普遍，影响 Python 和 C 等系统。令人惊讶的是，使用热缓存时，内存映射 IO 的速度明显快于传统 IO。这凸显了了解异步环境中内存映射 IO 的底层机制的重要性。（摘要基于 98% 的故事文本。）]]></description>
      <guid>https://t.me/hn_summary/105376</guid>
      <pubDate>Sat, 24 Aug 2024 17:25:09 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] OneText (YC W23) 正在寻找一位充满活力的参谋长加入其旧金山总部 [...]</title>
      <link>https://t.me/hn_summary/105375</link>
      <description><![CDATA[OneText (YC W23) 正在招聘一名参谋长
OneText (YC W23) 正在寻找一位充满活力的参谋长加入其旧金山总部，并提供远程工作选择。该职位提供 80,000 - 120,000 美元的薪水加上股权和综合福利，需要与创始人 Jonathan Fudem (CEO) 和 Daniel Brain (CTO) 密切合作。OneText 通过让购物者通过短信购物来彻底改变电子商务，为品牌带来显着的收入增长。理想的候选人将拥有高增长初创公司的经验、强大的分析能力以及在模糊环境中茁壮成长的能力。这个角色的独特之处在于融合了战略、运营和动手任务，非常适合既是魔术师又是海盗又是宇航员的人。加入 OneText 帮助打造支付和营销的未来。电子邮件：hello@onetext.com。]]></description>
      <guid>https://t.me/hn_summary/105375</guid>
      <pubDate>Sat, 24 Aug 2024 17:00:57 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] ECMAScript 中的 Temporal 提案是一项突破性的变化，它提供了一个原生对象 [...]</title>
      <link>https://t.me/hn_summary/105374</link>
      <description><![CDATA[JavaScript 日期即将修复
ECMAScript 中的 Temporal 提案是一项突破性的变化，它提供了一个本机对象来表示“分区日期时间”。这至关重要，因为传统的 JavaScript Date 对象只存储纯数字，失去了人类日期和时区的原始语义。新的 Temporal API 已经通过 FullCalendar 团队的 polyfill 提供，它引入了 Temporal.ZonedDateTime 对象，它准确地表示日期和时间及其相应的时区。这消除了由于夏令时 (DST) 或时区差异导致的意外变化等常见问题。该 API 还支持各种日历，并提供比较日期、处理 DST 转换等方法。这一进步对于现代 Web 开发至关重要，可确保全球时间一致性。 

争议：文章强调 JavaScript 中的日期是 POSIX，而不是 UTC，忽略闰秒，这可能是一个争论点。

独特/巧妙：Temporal API 能够轻松处理时区和 DST 转换，这是一个突出的功能，使其成为全球应用程序的必需品。]]></description>
      <guid>https://t.me/hn_summary/105374</guid>
      <pubDate>Sat, 24 Aug 2024 16:57:53 GMT</pubDate>
    </item>
    <item>
      <title>[媒体] 在《从头开始实施 React》一书中，Robby Pruzan 引导读者了解他的实施过程[...]</title>
      <link>https://t.me/hn_summary/105373</link>
      <description><![CDATA[从头开始实现 React
在《从头开始实现 React》一文中，Robby Pruzan 带领读者了解他构建简化版 React 的过程，旨在让读者更深入地了解 React 的行为和界面设计。他强调，他的实现并未经过优化，也没有遵循 React 的内部架构，而是专注于虚拟 DOM 和协调等核心概念。Pruzan 首先解释了 JSX 如何转换为函数调用，然后对视图层次结构进行建模。他详细介绍了如何创建树结构来表示组件以及如何将此树呈现到 DOM。本文还介绍了如何实现核心钩子，如 useState、useEffect 等，并解释了所涉及的挑战和解决方案，例如跟踪组件实例和维护钩子顺序。这种教育方法独特而巧妙，为了解 React 的内部工作原理提供了宝贵的见解。（基于 25% 的故事文本的摘要。）]]></description>
      <guid>https://t.me/hn_summary/105373</guid>
      <pubDate>Sat, 24 Aug 2024 16:55:49 GMT</pubDate>
    </item>
    </channel>
</rss>