<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>最新提交：ChatGPT</title>
    <link>https://www.reddit.com/r/ChatGPT/new</link>
    <description>用于讨论 ChatGPT 和 AI 的 Subreddit。与 OpenAI 无关。</description>
    <lastBuildDate>Sat, 08 Jun 2024 15:08:42 GMT</lastBuildDate>
    <item>
      <title>语音速度功能</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db50k5/voice_speed_feature/</link>
      <description><![CDATA[ChatGPT 需要内置语音速度功能。它说话对我来说太慢了。我试过“以 1.5 倍速度说话”、“以两倍速度说话”等。 我希望他们会有一个播放速度功能。    提交人    /u/hyggjur   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db50k5/voice_speed_feature/</guid>
      <pubDate>Sat, 08 Jun 2024 15:07:03 GMT</pubDate>
    </item>
    <item>
      <title>歌曲抓取机器人的问题</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db4xrk/trouble_with_song_scraper_bot/</link>
      <description><![CDATA[      我有一个从 last.fm 像这样： https://preview.redd.it/vrwwnku64d5d1.png?width=1601&amp;format=png&amp;auto=webp&amp;s=251b35ce5d4ac0eae88355f952d49b47eb3216c8 问题是我需要在另一列中获取 key 和 bpm，也像这样： https://preview.redd.it/t4sc7yvi4d5d1.png?width=1626&amp;format=png&amp;auto=webp&amp;s=fa9358417d9ed801ba53be40505b6ae38dbf3ace 我尝试使用 stats.fm，但它不起作用，我无法使用 spotify api，因为每当我尝试登录时，它都会将我注销 import request import webbrowser from bs4 import BeautifulSoup # 您的 Last.fm API 密钥API_KEY = &#39;c371605ac116784ec0ca26a6e2671d80&#39; # 用于分页获取热门曲目的函数 def fetch_top_tracks(limit, page): url = f&quot;http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&amp;api_key={API_KEY}&amp;format=json&amp;limit={limit}&amp;page={page}&quot; response = request.get(url) if response.status_code == 200: return response.json() else: print(&quot;无法从 Last.fm 检索数据。&quot;) return None # 从 stats.fm 获取 BPM 和密钥的函数 def fetch_statsfm_data(song_name, artist_name): url = f&quot;https://stats.fm/track/{song_name}/{artist_name}?appid=31jj2cbjt35uqboycfchouznjhky&quot; response = request.get(url) if response.status_code == 200: soup = BeautifulSoup(response.text, &#39;html.parser&#39;) bpm_tag = soup.find(&#39;div&#39;, class_=&#39;tempo&#39;) key_tag = soup.find(&#39;div&#39;, class_=&#39;key&#39;) if bpm_tag and key_tag: bpm = bpm_tag.text.strip() key = key_tag.text.strip() return key, bpm return &#39;Unknown&#39;, &#39;Unknown&#39; # 获取前 100 条曲目 limit = 50 # 每个请求获取 50 条曲目 page = 1 all_tracks = [] while len(all_tracks) &lt; 100: data = fetch_top_tracks(limit, page) if data: tracks = data[&#39;tracks&#39;][&#39;track&#39;] all_tracks.extend(tracks) page += 1 else: break # 生成 HTML 内容 html_content = &quot;&quot;&quot; &lt;!DOCTYPE html&gt; &lt;html lang=&quot;en&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;本月最热门的 100 首歌曲&lt;/title&gt; &lt;style&gt; body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f9f9f9; } h1 { text-align: center; } table { width: 80%; margin: 20px auto; border-collapse: collapse; } th, td { border: 1px solid #ddd; padding: 8px; text-align: left; } th { background-color: #4CAF50; color: white; } tr:nth-child(even) { background-color: #f2f2f2; } &lt;/style&gt; &lt;/head&gt; &lt;body&gt; &lt;h1&gt;本月最热门的 100 首歌曲&lt;/h1&gt; &lt;table&gt; &lt;tr&gt; &lt;th&gt;排名&lt;/th&gt; &lt;th&gt;歌曲&lt;/th&gt; &lt;th&gt;艺术家&lt;/th&gt; &lt;th&gt;关键词&lt;/th&gt; &lt;th&gt;BPM&lt;/th&gt; &lt;/tr&gt; &quot;&quot;&quot; for idx, track in enumerate(all_tracks[:100], 1): song_name = track[&#39;name&#39;] artist_name = track[&#39;artist&#39;][&#39;name&#39;] key, bpm = fetch_statsfm_data(song_name, artist_name) html_content += f&quot;&quot;&quot;&lt;tr&gt; &lt;td&gt;{idx}&lt;/td&gt; &lt;td&gt;{song_name}&lt;/td&gt; &lt;td&gt;{artist_name}&lt;/td&gt; &lt;td&gt;{key}&lt;/td&gt; &lt;td&gt;{bpm}&lt;/td&gt; &lt;/tr&gt; &quot;&quot;&quot; html_content += &quot;&quot;&quot; &lt;/table&gt; &lt;/body&gt; &lt;/html&gt; &quot;&quot;&quot; # 将 HTML 内容写入文件 with open(&#39;top_100_songs.html&#39;, &#39;w&#39;) as file: file.write(html_content) # 在默认 Web 浏览器中打开 HTML 文件 webbrowser.open(&#39;top_100_songs.html&#39;)     submitted by    /u/AffectionateNorth464   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db4xrk/trouble_with_song_scraper_bot/</guid>
      <pubDate>Sat, 08 Jun 2024 15:03:32 GMT</pubDate>
    </item>
    <item>
      <title>您想到了哪些聊天 GPT 的天才用法？</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db4my0/what_genius_use_of_chat_gpt_have_you_come_up_with/</link>
      <description><![CDATA[  由    /u/tina-marino  提交  [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db4my0/what_genius_use_of_chat_gpt_have_you_come_up_with/</guid>
      <pubDate>Sat, 08 Jun 2024 14:49:41 GMT</pubDate>
    </item>
    <item>
      <title>GPT-4o 计算我什么时候可以再次使用它</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db4lqe/gpt4o_calculating_when_i_can_use_it_again/</link>
      <description><![CDATA[        提交人    /u/TomSFox   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db4lqe/gpt4o_calculating_when_i_can_use_it_again/</guid>
      <pubDate>Sat, 08 Jun 2024 14:48:03 GMT</pubDate>
    </item>
    <item>
      <title>克劳德问道：你怎么知道其他人有意识？</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db4ihr/claude_asking_how_do_you_know_other_humans_are/</link>
      <description><![CDATA[        提交人    /u/Tight_You7768   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db4ihr/claude_asking_how_do_you_know_other_humans_are/</guid>
      <pubDate>Sat, 08 Jun 2024 14:43:45 GMT</pubDate>
    </item>
    <item>
      <title>如果人们本来就不喜欢工作，为什么还要担心人工智能抢走他们的工作呢？</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db4cjr/why_do_people_fear_ai_taking_their_jobs_if_they/</link>
      <description><![CDATA[如今，人们对人工智能和自动化取代许多行业中的人类工人的可能性有很多担忧和讨论。但我经常看到人们抱怨他们多么不喜欢自己的工作，希望他们不必工作。    提交人    /u/Tight_You7768   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db4cjr/why_do_people_fear_ai_taking_their_jobs_if_they/</guid>
      <pubDate>Sat, 08 Jun 2024 14:36:00 GMT</pubDate>
    </item>
    <item>
      <title>用麦片盒进行 ChatGPT 4o 智商测试</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db42tr/quizzed_chatgpt_4o_with_a_cereal_box_iq_test/</link>
      <description><![CDATA[      它似乎理解了图像，但全都错了。每当 GPT5 出来时都会用它重新测试😅。    由    /u/prc41  提交  [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db42tr/quizzed_chatgpt_4o_with_a_cereal_box_iq_test/</guid>
      <pubDate>Sat, 08 Jun 2024 14:23:09 GMT</pubDate>
    </item>
    <item>
      <title>法学硕士 (LLM) 中的常见代理工作流模式</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db40gj/common_agentic_workflow_patterns_in_llms/</link>
      <description><![CDATA[      “常见代理工作流模式” - 快速阅读，来自 Mastering LLM (Large Language Model) &#39;Coffee Break Concepts&#39; Vol.5 本文档深入探讨了常见的代理工作流模式，例如  Serial工作流程 分层工作流程 状态机工作流程 以人为本的工作流程 群聊工作流程  在下面评论您接下来想要了解此“咖啡休息概念”系列中的哪个主题，我们将在接下来的几周内包含这些主题。    提交人    /u/masteringllm   [link] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db40gj/common_agentic_workflow_patterns_in_llms/</guid>
      <pubDate>Sat, 08 Jun 2024 14:20:02 GMT</pubDate>
    </item>
    <item>
      <title>PDF</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db3u1p/pdf/</link>
      <description><![CDATA[你好，我正在尝试使用 chat gpt 4o 处理 pdf（大学讲义），我经常需要在 180 页的讲义中找到特定主题（我问它们在哪一页，但它没有给出答案）。我尝试通过删除不需要的工具来减轻自定义说明中的 chat gpt 负担，但它总是出错。您说 chat gpt 4 可能做得更好吗？    提交人    /u/PuzzleheadedGrass512   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db3u1p/pdf/</guid>
      <pubDate>Sat, 08 Jun 2024 14:11:16 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT 有时会泄露其他人的聊天记录吗？</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db3tij/does_chatgpt_sometimes_leak_other_peoples_chats/</link>
      <description><![CDATA[我只是想让它为我总结一个视频，方法是给它 YouTube 上的字幕记录。这是一个政治视频。然而，每次我尝试时得到的回应都完全不相关，这是一个示例：  我看到您上传了田纳西志愿者足球赛程 2024 年的 PDF…… 当然，我可以帮您改进数独解算器的 Swift 代码…… 这里有一些每月召开一次追赶电话的想法……  我与这些完全无关。几分钟后，它不再给出这些无意义的答案。这些其他人的聊天是否泄露到我的聊天中，还是模型产生了幻觉？我倾向于相信是前者，因为每当我尝试询问后续问题时，它都会给我一些错误，而当无意义的答案也停止时，这种情况也停止了。 不幸的是，我没有链接可以分享，因为这些都在临时窗口中。    提交人    /u/muhmeinchut69   [link] [评论]]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db3tij/does_chatgpt_sometimes_leak_other_peoples_chats/</guid>
      <pubDate>Sat, 08 Jun 2024 14:10:33 GMT</pubDate>
    </item>
    <item>
      <title>研究发现，具有 7B 个参数的小型模型现在可以在某些使用 LoRA 的任务上胜过 GPT-4。具体方法如下：</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db3rxa/study_finds_that_smaller_models_with_7b_params/</link>
      <description><![CDATA[具有 7B 个参数的较小模型现在可以胜过具有 1.76 万亿个参数的 GPT-4。😧 怎么做到的？ Predibase 的一项新研究表明，如果使用低秩自适应 (LoRA) 在特定于任务的数据集上对 2B 和 7B 模型进行微调，则可以比较大的模型产生更好的结果。（评论中指向论文的链接） LoRA 通过将低秩矩阵注入模型的现有层来减少 LLM 中可训练参数的数量。 这些矩阵可以有效地捕获特定于任务的信息，从而以最少的计算和内存进行微调。 因此，本文比较了 310 个 LoRA 微调模型，表明 4 位 LoRA 模型在许多任务中都超越了基础模型甚至 GPT-4。他们还确定了任务复杂性对微调结果的影响。 LoRA 微调何时优于 GPT-4 等大型模型？ 当您拥有范围狭窄、面向分类的任务（例如 GLUE 基准测试中的任务）时 — — 您可以获得接近 90% 的准确率。 另一方面，GPT-4 在 6/31 个任务中的表现优于微调模型，这些任务涉及更广泛、更复杂的领域，例如编码和 MMLU。    提交人    /u/sarthakai   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db3rxa/study_finds_that_smaller_models_with_7b_params/</guid>
      <pubDate>Sat, 08 Jun 2024 14:08:24 GMT</pubDate>
    </item>
    <item>
      <title>伙计，这玩意儿有时候就是会出问题。它直接放弃回答问题，然后列出随机答案。</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db3rul/man_this_thing_just_goes_to_shit_sometimes_it/</link>
      <description><![CDATA[伙计，这东西有时候会变得很糟糕。它只是放弃问题并列出随机答案。  伙计，这东西有时候会变得很糟糕。它只是放弃问题并列出随机答案。  伙计，这东西有时候会变得很糟糕。它只是放弃问题并列出随机答案。  伙计，这东西有时候会变得很糟糕。它只是放弃问题并列出随机答案。     提交者    /u/KnowItBrother99   [链接] [评论]]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db3rul/man_this_thing_just_goes_to_shit_sometimes_it/</guid>
      <pubDate>Sat, 08 Jun 2024 14:08:17 GMT</pubDate>
    </item>
    <item>
      <title>ChatGPT-4o 免费版很烂……（阅读帖子，这不是脏话）</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db3q7z/chatgpt4o_free_version_sucks_read_post_this_is/</link>
      <description><![CDATA[      有没有其他人注意到新发布的 ChatGPT（Omni）的免费版本以“多模式快速和免费”吸引你？推销，但随后不遵循指示（似乎是故意的）。当你将所有“提示”连成一排并将你的指示聚合成一个提示再次提供给模型时，你已经达到了极限，这表明你应该停止吝啬并使用付费版本？ 干得好，Sam... 这....是为了人类的利益？！？    提交人    /u/NaturalBournBuilder   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db3q7z/chatgpt4o_free_version_sucks_read_post_this_is/</guid>
      <pubDate>Sat, 08 Jun 2024 14:06:05 GMT</pubDate>
    </item>
    <item>
      <title>它使智能</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db3pb4/it_makes_intelligent/</link>
      <description><![CDATA[        提交人    /u/SweetCupcakexo1   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db3pb4/it_makes_intelligent/</guid>
      <pubDate>Sat, 08 Jun 2024 14:04:49 GMT</pubDate>
    </item>
    <item>
      <title>新的绘图功能：使用 ChatGPT 研究正确的统计数据</title>
      <link>https://www.reddit.com/r/ChatGPT/comments/1db3icu/new_plotting_capability_using_chatgpt_for/</link>
      <description><![CDATA[        提交人    /u/ShiZhenxiang   [链接] [评论] ]]></description>
      <guid>https://www.reddit.com/r/ChatGPT/comments/1db3icu/new_plotting_capability_using_chatgpt_for/</guid>
      <pubDate>Sat, 08 Jun 2024 13:55:33 GMT</pubDate>
    </item>
    </channel>
</rss>